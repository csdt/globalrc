#! /bin/bash

if [ -n "$PS1" -a "$PS1" != "not interactive" ]
then
  shell_start_clock () {
    #echo start clock $SHELL_CLOCK_PID
    ${GLOBALRC:+${GLOBALRC}/}scripts/clock &
    SHELL_CLOCK_PID=$!
    disown $SHELL_CLOCK_PID
  }
  shell_pause_clock () {
    #echo pause clock $SHELL_CLOCK_PID
    kill -s 19 $SHELL_CLOCK_PID > /dev/null 2>&1
  }
  shell_resume_clock () {
    #echo resume clock $SHELL_CLOCK_PID
    kill -s 18 $SHELL_CLOCK_PID > /dev/null 2>&1
  }
  shell_kill_clock () {
    #echo kill clock $SHELL_CLOCK_PID
    kill $SHELL_CLOCK_PID > /dev/null 2>&1
    SHELL_CLOCK_PID=
  }
  trap 'shell_pause_clock' DEBUG
  #trap 'shell_kill_clock' 1 2 3 4 6 8 15
  trap 'RCODE=$? ; shell_kill_clock ; exit $RCODE' EXIT
  if [ -n "$SHELL_CLOCK_PID" ]
  then
    shell_kill_clock
  fi
  shell_start_clock

  white="00m"
  red="31m"
  green="32m"
  blue="34m"


  # normal colors
  normal_color=$green
  pwd_color=$blue
  history_color="33m"
  end_color=$pwd_color
  root_color=$red



  # ssh colors
  if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]
  then
    normal_color="36m" # Cyan
    root_color="35m"   # Violet
  fi



  # screen colors
  if [[ $TERMCAP =~ screen ]] || [[ $TERM == "screen" ]]
  then
    pwd_color="33m"    # Jaune
    end_color=$pwd_color
  fi


  if [[ ${EUID} == 0 ]]
  then
    color=$root_color
  else
    color=$normal_color
  fi

  execution="\$(if [[ \$? == 0 ]]; then echo \"\[\e[01;$green\]\342\234\223\"; else echo \"\[\e[01;$red\]\342\234\227\"; fi)"
  user="\[\e[01;$color\]\u\[\e[00;$color\]@\h"
  pwd="\[\e[01;$pwd_color\]\w"
  history="\[\e[00;$history_color\]\$SHLVL[\!]"
  end="\[\e[01;$end_color\]\\\$\[\e[00m\]"

  PS1="$execution $user $history $pwd $end "'\[$(shell_resume_clock)\]'

  unset white red green blue normal_color pwd_color history_color end_color root_color color execution user pwd history end

fi

